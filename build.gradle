apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

sourceCompatibility = 1.8
version = '0.1'
mainClassName = 'mincamlj.Main'

compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Mincaml for Java', 'Implementation-Version': version
    }
}

task copyToLib(type: Copy) {
    into "$buildDir/libs"
    from configurations.runtime
}

build {
	dependsOn copyToLib
}

repositories {
    mavenCentral()
}

configurations {
	antlr4
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile 'org.ow2.asm:asm:5.0.3'

    antlr4 group: 'org.antlr', name: 'antlr4', version: '4.5'
    compile 'org.antlr:antlr4-runtime:4.5'
    
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

ext.antlr = [
    antlrDestPkg: "mincamlj.parser.grammer",
    antlrSrcDir : "src/main/resources",
    antlrGenDir : "src/main/java"
]

task runAntlr(type: JavaExec) {
	description = 'Generates Java sources from Antlr4 grammars.'

    inputs.dir file(antlr.antlrSrcDir)
    outputs.dir file(antlr.antlrGenDir)

    def grammars = fileTree(antlr.antlrSrcDir).include('**/*.g4')
    def pkg = antlr.antlrDestPkg.replaceAll("\\.", "/")

    main = 'org.antlr.v4.Tool'
    classpath = configurations.antlr4
    args = ["-o",
    		"${antlr.antlrGenDir}/${pkg}",
    		"-no-listener",
            "-visitor",
            "-package", antlr.antlrDestPkg,
            grammars.files
            ].flatten()
}